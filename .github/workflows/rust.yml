name: Rust

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: syd-linux-x86_64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: syd-linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: syd-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: syd-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: syd-windows-x86_64.exe

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for git describe to work
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    - name: Install cross-compilation tools
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Build release
      run: cargo build --release --verbose
    - name: Generate checksum
      shell: bash
      run: |
        cd target/release
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          sha256sum "${{ matrix.artifact_name }}" > "${{ matrix.artifact_name }}.sha256"
        else
          shasum -a 256 "${{ matrix.artifact_name }}" > "${{ matrix.artifact_name }}.sha256"
        fi
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: |
          target/release/${{ matrix.artifact_name }}
          target/release/${{ matrix.artifact_name }}.sha256
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        pattern: syd-*
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/syd-*
        asset_name: ${{ github.ref_name }}-${{ asset_path }}
        asset_content_type: application/octet-stream
